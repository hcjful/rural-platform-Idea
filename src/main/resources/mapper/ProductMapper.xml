<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rural.platform.mapper.ProductMapper">
    
    <resultMap id="productMap" type="com.rural.platform.entity.Product">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="category" column="category"/>
        <result property="price" column="price"/>
        <result property="origin" column="origin"/>
        <result property="description" column="description"/>
        <result property="image" column="image"/>
        <result property="stock" column="stock"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>
    
    <sql id="whereClause">
        <where>
            <if test="category != null and category != ''">
                AND category = #{category}
            </if>
            <if test="search != null and search != ''">
                AND (name LIKE CONCAT('%', #{search}, '%') OR description LIKE CONCAT('%', #{search}, '%'))
            </if>
        </where>
    </sql>
    
    <select id="findById" resultMap="productMap">
        SELECT * FROM product WHERE id = #{id}
    </select>
    
    <select id="findAll" resultMap="productMap">
        SELECT * FROM product
    </select>
    
    <select id="findByCategory" resultMap="productMap">
        SELECT * FROM product WHERE category = #{category}
    </select>
    
    <select id="searchByKeyword" resultMap="productMap">
        SELECT * FROM product WHERE name LIKE CONCAT('%', #{keyword}, '%')
    </select>
    
    <select id="findByPage" resultMap="productMap">
        SELECT * FROM product
        <include refid="whereClause"/>
        ORDER BY id DESC
        LIMIT #{offset}, #{pageSize}
    </select>
    
    <select id="countProducts" resultType="long">
        SELECT COUNT(*) FROM product
        <include refid="whereClause"/>
    </select>
    
    <insert id="insert" parameterType="com.rural.platform.entity.Product" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO product (name, category, price, origin, description, image, stock)
        VALUES (#{name}, #{category}, #{price}, #{origin}, #{description}, #{image}, #{stock})
    </insert>
    
    <update id="updateStock">
        UPDATE product SET stock = #{stock} WHERE id = #{id}
    </update>
    
    <delete id="deleteById">
        DELETE FROM product WHERE id = #{id}
    </delete>
</mapper> 